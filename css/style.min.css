/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/* Your custom fonts here */
/* Example

@font-face {
    font-family: 'CustomFont';
    src: url('../fonts/Custom-Font.eot');
    src: url('../fonts/Custom-Font.eot?#iefix') format('embedded-opentype'),
         url('../fonts/Custom-Font.woff') format('woff'),
         url('../fonts/Custom-Font.svg#custom_font') format('svg');
    font-weight: 400;       // For normal width. It could has another value   
    font-style: normal;     // Also could has another value
    }



*/
@font-face {
  font-family: 'Montserrat-Regular';
  src: url("../fonts/Montserrat-Regular.woff2");
  font-style: normal; }

html {
  height: 100%;
  box-sizing: border-box;
  font-size: 10px; }

*,
*::before,
*::after {
  box-sizing: inherit; }

.page {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: "Open Sans", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.2;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.page__wrapper {
  min-height: 100vh;
  overflow-x: hidden;
  min-width: 320px; }

img {
  max-width: 100%;
  height: auto; }

ul,
li {
  margin: 0;
  padding: 0;
  list-style: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0; }

p {
  margin: 0;
  padding: 0; }

a {
  font: inherit;
  color: #000;
  border: none;
  outline: none;
  transition: 0.3s; }
  a:hover {
    color: #000; }
  a:active {
    color: #000; }
  a:focus {
    color: #000; }

button {
  font: inherit;
  color: #000;
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
  cursor: pointer;
  background: none;
  transition: 0.3s; }
  button:hover {
    color: #000; }
  button:active {
    color: #000; }
  button:focus {
    color: #000; }

input[type="checkbox"] {
  display: none; }

input[type="checkbox"] + i {
  display: inline-block;
  vertical-align: top;
  position: relative;
  width: 21px;
  height: 20px;
  background-color: #000; }

input[type="checkbox"]:checked + i::after {
  content: "";
  display: block;
  width: 9px;
  height: 6px;
  position: absolute;
  top: 6px;
  left: 6px;
  border-left: 2px solid #fff;
  border-bottom: 2px solid #fff;
  transform: rotate(-45deg); }

input[type="radio"] {
  display: none; }

input[type="radio"] + i {
  display: inline-block;
  vertical-align: top;
  position: relative;
  width: 21px;
  height: 21px;
  background-color: #fff;
  border-radius: 50%; }

input[type="radio"]:checked + i::after {
  content: "";
  display: block;
  width: 9px;
  height: 9px;
  position: absolute;
  top: 6px;
  left: 6px;
  background-color: #000;
  border-radius: 50%; }

.container {
  display: block;
  position: relative;
  margin: 0 auto;
  width: 320px; }
  @media (min-width: 375px) {
    .container {
      width: 375px; } }
  @media (min-width: 768px) {
    .container {
      width: 768px; } }
  @media (min-width: 1260px) {
    .container {
      width: 1260px; } }

.desk__wrapper {
  width: 100vw;
  height: 100vh;
  background: url("../img/desk/space.jpg") no-repeat center/cover;
  padding: 21px 20px;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: flex-start; }

.taskDesk {
  display: block;
  width: 272px;
  min-height: 43px;
  max-height: 614px;
  height: 43px;
  background: #DFE3E6;
  border-radius: 3px;
  position: relative;
  overflow: auto;
  margin-right: 12px;
  margin-bottom: 20px; }
  .taskDesk.active {
    height: auto; }
    .taskDesk.active .taskDesk_title {
      margin-bottom: 12px; }
    .taskDesk.active .add_title {
      margin-bottom: 8px; }
    .taskDesk.active .taskDesk_box {
      justify-content: center; }
    .taskDesk.active .task_list {
      height: 100%; }

.taskDesk_delete {
  display: none;
  width: 12px;
  height: 12px;
  position: absolute;
  top: 9px;
  right: 9px;
  background: url("../img/taskDesk/cross.svg") no-repeat center;
  background-size: contain;
  cursor: pointer;
  z-index: 10;
  opacity: 0;
  pointer-events: none;
  transition: all 0s; }
  .taskDesk_delete.active {
    opacity: 1;
    pointer-events: auto; }

/* width */
::-webkit-scrollbar {
  width: 6px; }

/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1; }

/* Handle */
::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 20px; }

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555; }

.taskDesk_box {
  padding: 8px 12px;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  flex-wrap: nowrap; }

.taskDesk_title {
  display: block;
  width: 100%;
  font-weight: bold;
  font-size: 13px;
  line-height: 19px;
  word-wrap: break-word;
  max-height: 57px;
  overflow: auto;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif; }
  .taskDesk_title .inactive {
    display: none; }

.task_list {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: flex-start;
  justify-content: flex-start;
  width: 100%;
  height: 0;
  position: relative;
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 529px; }

.task_item {
  background: #fff;
  box-shadow: 0 1px 4px rgba(9, 45, 66, 0.25);
  border: 1px solid transparent;
  border-radius: 3px;
  width: 100%;
  padding: 8px 12px;
  margin-bottom: 8px;
  font-size: 13px;
  line-height: 19px;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif;
  word-wrap: break-word;
  z-index: 100;
  min-height: 35px;
  position: relative; }
  .task_item.drag_element {
    display: none;
    width: 248px;
    position: absolute;
    left: 0;
    top: 0; }
  .task_item.onDrag {
    border: 1px dashed #000;
    background: rgba(0, 0, 0, 0.4); }
  .task_item.pauseDrag {
    background: #d1ffc1; }

.task_item_btn {
  position: absolute;
  right: -5px;
  top: 2px;
  background: url("../img/taskDesk/menu.png") no-repeat center/contain;
  width: 20px;
  height: 25px;
  cursor: pointer; }

.task_item_popup {
  display: none;
  position: absolute;
  right: 0;
  top: 0;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  width: 130px;
  height: auto;
  background: #fff;
  flex-direction: column;
  justify-content: center; }
  .task_item_popup.active {
    display: flex; }

.task_item_input {
  display: block;
  background: #fff;
  box-shadow: 0 1px 4px rgba(9, 45, 66, 0.25);
  border-radius: 3px;
  width: 100%;
  padding: 8px 12px;
  margin-bottom: 8px;
  font-size: 13px;
  line-height: 19px;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif;
  word-wrap: break-word;
  z-index: 100;
  min-height: 35px;
  color: #000; }

.task_popup_controls {
  display: none; }
  .task_popup_controls.active {
    display: block; }

.task_item_save {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 152px;
  height: 30px;
  background-color: #bbb;
  border-radius: 3px;
  font-weight: bold;
  font-size: 13px;
  line-height: 19px;
  color: #fff;
  transition: all .2s ease;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif; }
  .task_item_save:hover, .task_item_save:active, .task_item_save:focus {
    background: #bbb; }
  .task_item_save.valid {
    background-color: #39C071; }
    .task_item_save.valid:hover, .task_item_save.valid:active, .task_item_save.valid:focus {
      background: #45c04f; }

.task_popup_edit {
  text-align: center;
  cursor: pointer; }
  .task_popup_edit:hover {
    background: lightblue; }

.task_popup_close {
  display: none;
  width: 15px;
  height: 15px;
  position: absolute;
  bottom: 9px;
  right: 0;
  background: url(../img/taskDesk/cross.svg) no-repeat center;
  background-size: contain;
  cursor: pointer;
  transition: all 0s; }
  .task_popup_close:hover {
    background-color: transparent; }

.taskDesk_add_box {
  width: 100%;
  background: #DFE3E6;
  border-radius: 3px;
  position: relative; }
  .taskDesk_add_box.active .taskDesk_area {
    display: block;
    height: auto; }
  .taskDesk_add_box.active .taskDesk_button_save {
    display: flex; }
  .taskDesk_add_box.active .taskDesk_button_close {
    opacity: 1;
    z-index: 10; }
  .taskDesk_add_box.active .add_task {
    display: none; }
  .taskDesk_add_box.emptyArea .taskDesk_button_save {
    background-color: #bbb;
    pointer-events: none; }
  .taskDesk_add_box.addColumn .add_title {
    display: block; }
  .taskDesk_add_box.addColumn .add_task {
    display: none; }
  .taskDesk_add_box.addColumn .taskDesk_input.active {
    display: block; }
  .taskDesk_add_box.addColumn .taskDesk_save_title.active {
    display: flex; }
  .taskDesk_add_box .taskDesk_save_title.emptyInput {
    background: #39C071;
    pointer-events: auto; }

.taskDesk_button_add {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  color: #6B808C;
  font-size: 13px;
  line-height: 19px;
  transition: all .3s ease;
  cursor: pointer;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif; }
  .taskDesk_button_add:hover, .taskDesk_button_add:active, .taskDesk_button_add:focus {
    color: #000; }
  .taskDesk_button_add:before {
    content: '';
    display: inline-block;
    vertical-align: middle;
    width: 15px;
    height: 15px;
    background: url("../img/taskDesk/add.svg") no-repeat center;
    background-size: contain;
    margin-right: 8px; }

.taskDesk_area {
  display: none;
  font-size: 13px;
  line-height: 19px;
  resize: vertical;
  width: 100%;
  height: 0;
  padding: 8px 12px;
  box-shadow: 0px 1px 4px rgba(9, 45, 66, 0.25);
  border-radius: 3px;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif;
  margin-bottom: 8px;
  transition: all .3s ease; }

.taskDesk_input {
  display: none;
  width: 100%;
  padding: 4px 12px;
  box-shadow: 0px 1px 4px rgba(9, 45, 66, 0.25);
  border-radius: 3px;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif;
  border: none;
  margin-bottom: 8px; }

.taskDesk_button_save {
  display: none;
  align-items: center;
  justify-content: center;
  width: 152px;
  height: 30px;
  background: #39C071;
  border-radius: 3px;
  font-weight: bold;
  font-size: 13px;
  line-height: 19px;
  color: #fff;
  transition: all .2s ease;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif; }
  .taskDesk_button_save:hover, .taskDesk_button_save:active, .taskDesk_button_save:focus {
    background: #45c04f; }

.taskDesk_button_close {
  width: 15px;
  height: 15px;
  display: inline-block;
  position: absolute;
  bottom: 9px;
  right: 0;
  background: url("../img/taskDesk/cross.svg") no-repeat center;
  background-size: contain;
  cursor: pointer;
  opacity: 0;
  z-index: -10;
  transition: all 0s; }

.add_title {
  display: none; }

.taskDesk_save_title {
  display: none;
  align-items: center;
  justify-content: center;
  width: 152px;
  height: 30px;
  border-radius: 3px;
  font-weight: bold;
  font-size: 13px;
  line-height: 19px;
  color: #fff;
  transition: all .2s ease;
  pointer-events: none;
  background: #bbb;
  font-family: Montserrat-Regular, Helvetica, Arial, sans-serif; }

.held {
  border: solid 10px black;
  background-color: black; }

.holder {
  height: 110px;
  width: 110px;
  margin: 10px;
  border: solid 5px black;
  background-color: white;
  display: inline-block; }

.hovered {
  border: dotted 1px black; }

.invisible {
  display: none; }

._template {
  display: block; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
